<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
        <!--这边3.0版本改成3.2.xsd版本后就支持fastJson配置了-->

    <context:component-scan base-package="com.learn"/>

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/pages/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--3：配置JSP 显示ViewResolver-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 对文件上传的处理，这里声明的id必须为multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="2000000"/>
        <property name="maxInMemorySize" value="40960"></property>
    </bean>


    <mvc:resources mapping="/static/**" location="/"/>

    <mvc:annotation-driven>
        <!--配置@ResponseBody由fastjson解析-->
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="fastJsonConfig" ref="fastJsonConfig" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="charset" value="UTF-8" />
    </bean>

<!--拦截器配置-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/user/*"/>-->
            <!--<bean class="com.learn.filter.FilterRequest"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <!-- <bean class="com.learn.filter.FilterRequest"/> -->
        <mvc:interceptor>
            <!-- 进行拦截：/**表示拦截所有controller -->
            <mvc:mapping path="/**" />
            <!-- 不进行拦截 -->
            <mvc:exclude-mapping path="/user/Login" />
            <bean class="com.learn.filter.FilterRequest" />
        </mvc:interceptor>
    </mvc:interceptors>
    <!--拦截器配置end-->

    <mvc:default-servlet-handler />

    <!--使AspectJ注解起作用：自动为匹配的类生成代理对象-->
    <!--使用了SpringMvc若这边不配置，拦截controller，注解@Aspect则会不起作用-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>